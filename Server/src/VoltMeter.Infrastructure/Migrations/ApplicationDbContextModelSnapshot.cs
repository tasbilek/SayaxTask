// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoltMeter.Infrastructure.Context;

#nullable disable

namespace VoltMeter.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VoltMeter.Domain.ConsumptionRecord.ConsumptionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MeterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReadingDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReadingHour")
                        .HasColumnType("int");

                    b.Property<decimal>("ReadingValue")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("MeterId");

                    b.ToTable("ConsumptionRecords");
                });

            modelBuilder.Entity("VoltMeter.Domain.Meter.Meter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(8,4)");

                    b.Property<Guid>("MunicipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesMethod")
                        .HasColumnType("int");

                    b.Property<int>("Tariff")
                        .HasColumnType("int");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(8,4)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalId");

                    b.ToTable("Meters");
                });

            modelBuilder.Entity("VoltMeter.Domain.MonthlyRate.MonthlyRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialDistributionTariff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommercialEnergyTariff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndustrialDistributionTariff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndustrialEnergyTariff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YekPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyRates");
                });

            modelBuilder.Entity("VoltMeter.Domain.Municipal.Municipal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LocalTax")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipals");
                });

            modelBuilder.Entity("VoltMeter.Domain.PtfRate.PtfRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Period")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PtfRates");
                });

            modelBuilder.Entity("VoltMeter.Domain.ConsumptionRecord.ConsumptionRecord", b =>
                {
                    b.HasOne("VoltMeter.Domain.Meter.Meter", "Meter")
                        .WithMany("ConsumptionRecords")
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meter");
                });

            modelBuilder.Entity("VoltMeter.Domain.Meter.Meter", b =>
                {
                    b.HasOne("VoltMeter.Domain.Municipal.Municipal", "Municipal")
                        .WithMany("Meters")
                        .HasForeignKey("MunicipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipal");
                });

            modelBuilder.Entity("VoltMeter.Domain.Meter.Meter", b =>
                {
                    b.Navigation("ConsumptionRecords");
                });

            modelBuilder.Entity("VoltMeter.Domain.Municipal.Municipal", b =>
                {
                    b.Navigation("Meters");
                });
#pragma warning restore 612, 618
        }
    }
}
